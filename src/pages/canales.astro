---
import Layout from "@layouts/Layout.astro"
import Header from "@components/Header.astro"
import Footer from "@components/Footer.astro"
import { ChannelGroup } from "@components/channels/ChannelGroup"
import { SearchChannels } from "@components/channels/SearchChannels"
import channelsData from "../data/channels.json"
import BackToTop from "@components/UI/BackToTop"

const totalChannels = channelsData.groups.reduce((acc, group) => acc + group.channels.length, 0)
---

<Layout title="Canales Disponibles - ZeroPlay">
	<Header />
	<main class="min-h-screen px-4 pt-32">
		<div class="mx-auto max-w-7xl">
			<div class="mb-8 text-center">
				<h1 class="mb-4 text-4xl font-bold text-white">Canales Disponibles</h1>
				<p class="text-lg text-white/80">
					Explora nuestra amplia selección de canales premium organizados por categoría
				</p>
			</div>

			<SearchChannels
				client:load
				totalChannels={totalChannels}
				onSearch={(query) => {
					const groups = document.querySelectorAll("[data-channel-group]")
					groups.forEach((group) => {
						const channels = group.querySelectorAll("[data-channel]")
						let hasVisibleChannels = false

						channels.forEach((channel) => {
							const channelName = channel.textContent?.toLowerCase() || ""
							const isVisible = channelName.includes(query.toLowerCase())
							;(channel as HTMLElement).style.display = isVisible ? "flex" : "none"
							if (isVisible) hasVisibleChannels = true
						})
						;(group as HTMLElement).style.display = hasVisibleChannels ? "block" : "none"
					})
				}}
			/>

			<div class="space-y-8">
				{
					channelsData.groups.map((group, index) => (
						<div data-channel-group>
							<ChannelGroup group={group} index={index} client:load />
						</div>
					))
				}
			</div>
		</div>
	</main>
	<BackToTop client:load />
	<Footer />
</Layout>
